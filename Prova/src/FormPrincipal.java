
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import org.w3c.dom.CDATASection;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Francisco Pomba
 */
public class FormPrincipal extends javax.swing.JFrame {
    private DefaultTableModel modelo;
    private Empresa empresa;

    /**
     * Creates new form FormPrincipal
     */
    public FormPrincipal() {
        empresa = new Empresa();
        initComponents();
        tabelaFuncionarios.fixarTabela(jScrollPane1);
        getContentPane().setBackground(new Color(27,66,66));
    }
    
    void criarArvore(){
        Cfuncionario f1 = new Cfuncionario( 23, "Chantal", "Femenino", 500000);
        Cfuncionario f2 = new Cfuncionario( 30, "Isabel", "Femenino", 400000);
        Cfuncionario f3 = new Cfuncionario( 24, "Francisco", "Masculino", 500000);
        Cfuncionario f4 = new Cfuncionario( 25, "Querilson", "Masculino", 450000);
        Cfuncionario f5 = new Cfuncionario( 19, "Agostinha", "Femenino", 300000);
        Cfuncionario f6 = new Cfuncionario( 15, "Yaikara", "Femenino", 200000);
        Cfuncionario f7 = new Cfuncionario( 9, "Tchiziandra", "Femenino", 100000);
        empresa.inserirFuncionario(f1);
        empresa.inserirFuncionario(f2);
        empresa.inserirFuncionario(f3);
        empresa.inserirFuncionario(f4);
        empresa.inserirFuncionario(f5);
        empresa.inserirFuncionario(f6);
        empresa.inserirFuncionario(f7);
    
    }
    void carregarTabela(List<Cfuncionario> lista){
        modelo = (DefaultTableModel)tabelaFuncionarios.getModel();
        modelo.setRowCount(0);
        for(Cfuncionario funcionario: lista){
            Object[] obj = new Object[]{funcionario.getId(),
                funcionario.getNome(), funcionario.getSalarioFormatado(),
                funcionario.getSexo()
            };
            modelo.addRow(obj);
        }
    
     }
    boolean validarCampos(){
        if(txtNome.getText().equals("")||txtId.getText().equals("")||
                txtSalario.getText().equals("")||cbxSexo.getSelectedIndex() ==-1){
            return false;
        }
        return true;
    }
    void limparCampos(){
        txtNome.setText(null);
        txtId.setText(null);
        txtSalario.setText(null);
        cbxSexo.setSelectedItem(null);
    }
    void habilitarCampos(boolean hab){
            txtNome.setEditable(hab);
            txtId.setEditable(hab);
            txtSalario.setEditable(hab);
            cbxSexo.setEditable(hab);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem14 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaFuncionarios = new MinhaTabela();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSalario = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        cbxSexo = new javax.swing.JComboBox<>();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        lblLista = new javax.swing.JLabel();
        cbxPesquiar = new javax.swing.JCheckBox();
        cbxAtualizar = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mPreOrdem = new javax.swing.JMenuItem();
        mOrdem = new javax.swing.JMenuItem();
        mPosOrdem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        qtMasculino = new javax.swing.JMenuItem();
        qtFemenino = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        mListarMasculino = new javax.swing.JMenuItem();
        mListarFemenino = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        mQtPares = new javax.swing.JMenuItem();
        mQtdImpares = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        mSalarioTotal = new javax.swing.JMenuItem();
        mFuncMaiorSal = new javax.swing.JMenuItem();
        mSalarioMedio = new javax.swing.JMenuItem();
        mQtdSalAbaixoMed = new javax.swing.JMenuItem();
        mListarFuncionarioAbaixoMed = new javax.swing.JMenuItem();
        mSair = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        criarArvore = new javax.swing.JMenuItem();

        jMenuItem14.setText("jMenuItem14");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(27, 66, 66));

        jScrollPane1.setBackground(new java.awt.Color(27, 66, 66));

        tabelaFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "SALÁRIO", "SEXO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaFuncionarios.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        tabelaFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaFuncionarios);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("IDENTIFICADOR: ");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("NOME: ");
        jLabel2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("SEXO:");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("SALÁRIO: ");
        jLabel4.setToolTipText("");

        txtSalario.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        txtId.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        txtNome.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        cbxSexo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        cbxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Femenino", "Masculino" }));

        btnAdicionar.setBackground(new java.awt.Color(27, 66, 66));
        btnAdicionar.setForeground(new java.awt.Color(204, 204, 204));
        btnAdicionar.setText("ADICIONAR");
        btnAdicionar.setBorder(new javax.swing.border.MatteBorder(null));
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setBackground(new java.awt.Color(27, 66, 66));
        btnRemover.setForeground(new java.awt.Color(204, 204, 204));
        btnRemover.setText("REMOVER");
        btnRemover.setBorder(new javax.swing.border.MatteBorder(null));
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnAtualizar.setBackground(new java.awt.Color(27, 66, 66));
        btnAtualizar.setForeground(new java.awt.Color(204, 204, 204));
        btnAtualizar.setText("ATUALIZAR");
        btnAtualizar.setBorder(new javax.swing.border.MatteBorder(null));
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnPesquisar.setBackground(new java.awt.Color(27, 66, 66));
        btnPesquisar.setForeground(new java.awt.Color(204, 204, 204));
        btnPesquisar.setText("PESQUISAR");
        btnPesquisar.setBorder(new javax.swing.border.MatteBorder(null));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        lblLista.setBackground(new java.awt.Color(0, 0, 0));
        lblLista.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblLista.setForeground(new java.awt.Color(204, 204, 204));
        lblLista.setText("LISTA DE FUNCIONÁRIOS");

        cbxPesquiar.setBackground(new java.awt.Color(27, 66, 66));
        cbxPesquiar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        cbxPesquiar.setForeground(new java.awt.Color(204, 204, 204));
        cbxPesquiar.setText("PESQUISAR");
        cbxPesquiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPesquiarActionPerformed(evt);
            }
        });

        cbxAtualizar.setBackground(new java.awt.Color(27, 66, 66));
        cbxAtualizar.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        cbxAtualizar.setForeground(new java.awt.Color(204, 204, 204));
        cbxAtualizar.setText("ATUALIZAR/REMOVER");
        cbxAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAtualizarActionPerformed(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(27, 66, 66));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jMenu1.setBackground(new java.awt.Color(27, 66, 66));
        jMenu1.setText("Percorrer");

        mPreOrdem.setText("Pre-Ordem");
        mPreOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPreOrdemActionPerformed(evt);
            }
        });
        jMenu1.add(mPreOrdem);

        mOrdem.setText("Ordem");
        mOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOrdemActionPerformed(evt);
            }
        });
        jMenu1.add(mOrdem);

        mPosOrdem.setText("Pos-Ordem");
        mPosOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mPosOrdemActionPerformed(evt);
            }
        });
        jMenu1.add(mPosOrdem);

        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(27, 66, 66));
        jMenu2.setText("Funcionários");

        jMenu4.setText("Quantidade de Funcionários");

        qtMasculino.setText("Masculino");
        qtMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtMasculinoActionPerformed(evt);
            }
        });
        jMenu4.add(qtMasculino);

        qtFemenino.setText("Femenino");
        qtFemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtFemeninoActionPerformed(evt);
            }
        });
        jMenu4.add(qtFemenino);

        jMenu2.add(jMenu4);

        jMenu5.setText("Lista de Funcionários");

        mListarMasculino.setText("Masculino");
        mListarMasculino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mListarMasculinoActionPerformed(evt);
            }
        });
        jMenu5.add(mListarMasculino);

        mListarFemenino.setText("Femenino");
        mListarFemenino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mListarFemeninoActionPerformed(evt);
            }
        });
        jMenu5.add(mListarFemenino);

        jMenu2.add(jMenu5);

        jMenu6.setText("Quantidade de Chaves");

        mQtPares.setText("Pares");
        mQtPares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mQtParesActionPerformed(evt);
            }
        });
        jMenu6.add(mQtPares);

        mQtdImpares.setText("Impares");
        mQtdImpares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mQtdImparesActionPerformed(evt);
            }
        });
        jMenu6.add(mQtdImpares);

        jMenu2.add(jMenu6);

        jMenuBar1.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(27, 66, 66));
        jMenu3.setText("Salário");

        mSalarioTotal.setText("Salário Total");
        mSalarioTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSalarioTotalActionPerformed(evt);
            }
        });
        jMenu3.add(mSalarioTotal);

        mFuncMaiorSal.setText("Funcionário Maior Salario");
        mFuncMaiorSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mFuncMaiorSalActionPerformed(evt);
            }
        });
        jMenu3.add(mFuncMaiorSal);

        mSalarioMedio.setText("Salário Médio");
        mSalarioMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSalarioMedioActionPerformed(evt);
            }
        });
        jMenu3.add(mSalarioMedio);

        mQtdSalAbaixoMed.setText("Quantidade Funcionários Abaixo Salário Médio");
        mQtdSalAbaixoMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mQtdSalAbaixoMedActionPerformed(evt);
            }
        });
        jMenu3.add(mQtdSalAbaixoMed);

        mListarFuncionarioAbaixoMed.setText("Lista de Funcionários Abaixo Salário Médio");
        mListarFuncionarioAbaixoMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mListarFuncionarioAbaixoMedActionPerformed(evt);
            }
        });
        jMenu3.add(mListarFuncionarioAbaixoMed);

        jMenuBar1.add(jMenu3);

        mSair.setBackground(new java.awt.Color(27, 66, 66));
        mSair.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mSair.setText("Outros");
        mSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSairActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mSair.add(jMenuItem1);

        criarArvore.setText("Criar Funcionários Teste");
        criarArvore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarArvoreActionPerformed(evt);
            }
        });
        mSair.add(criarArvore);

        jMenuBar1.add(mSair);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxPesquiar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(cbxAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(lblLista, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(txtSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxPesquiar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(cbxAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(lblLista, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mPreOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mPreOrdemActionPerformed
        // TODO add your handling code here:
        lblLista.setText("LISTA DE FUNCIONÁRIOS EM PRÉ ORDEM");
        List<Cfuncionario> lista = empresa.funcionariosPreOrdem();
        carregarTabela(lista);
    }//GEN-LAST:event_mPreOrdemActionPerformed

    private void mOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOrdemActionPerformed
        // TODO add your handling code here:
        lblLista.setText("LISTA DE FUNCIONÁRIOS EM ORDEM");
        List<Cfuncionario> lista = empresa.funcionariosOrdem();
        carregarTabela(lista);
    }//GEN-LAST:event_mOrdemActionPerformed

    private void mPosOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mPosOrdemActionPerformed
        // TODO add your handling code here:
        lblLista.setText("LISTA DE FUNCIONÁRIOS EM POS ORDEM");
        List<Cfuncionario> lista = empresa.funcionariosPosOrdem();
        carregarTabela(lista);
    }//GEN-LAST:event_mPosOrdemActionPerformed

    private void qtMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtMasculinoActionPerformed
        // TODO add your handling code here:
        int qtd = empresa.quantidadeFuncSexo("Masculino");
        String mensagem = "A quantidade de funcionários do sexo masculino é: "+qtd;
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_qtMasculinoActionPerformed

    private void qtFemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtFemeninoActionPerformed
        // TODO add your handling code here:
        int qtd = empresa.quantidadeFuncSexo("Femenino");
        String mensagem = "A quantidade de funcionários do sexo femenino é: "+qtd;
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_qtFemeninoActionPerformed

    private void mQtParesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mQtParesActionPerformed
        // TODO add your handling code here:
        int qtd = empresa.qtdChavesPares();
        String mensagem = "A quantidade de chaves pares é: "+qtd;
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_mQtParesActionPerformed

    private void mQtdImparesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mQtdImparesActionPerformed
        // TODO add your handling code here:
        int qtd = empresa.qtdChavesImpares();
        String mensagem = "A quantidade de chaves impares é: "+qtd;
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_mQtdImparesActionPerformed

    private void mListarMasculinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mListarMasculinoActionPerformed
        // TODO add your handling code here:
        lblLista.setText("LISTA DE FUNCIONÁRIOS DO SEXO MASCULINO");
        List<Cfuncionario> lista = empresa.listarPorSexo("Masculino");
        carregarTabela(lista);
    }//GEN-LAST:event_mListarMasculinoActionPerformed

    private void mListarFemeninoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mListarFemeninoActionPerformed
        // TODO add your handling code here:
        lblLista.setText("LISTA DE FUNCIONÁRIOS DO SEXO FEMENINO");
        List<Cfuncionario> lista = empresa.listarPorSexo("Femenino");
        carregarTabela(lista);
    }//GEN-LAST:event_mListarFemeninoActionPerformed

    private void mSalarioTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSalarioTotalActionPerformed
        // TODO add your handling code here:
        String salario = empresa.totalSalarioFormatado();
        String mensagem = "O salário total da empresa é : "+salario;
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_mSalarioTotalActionPerformed

    private void mFuncMaiorSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mFuncMaiorSalActionPerformed
        // TODO add your handling code here:
        Cfuncionario funcionario = empresa.encontrarMaiorSalario();
        String mensagem = "O Funcionário com maior salário é: "+funcionario.getNome()+"\nO salário dele é: "+funcionario.getSalarioFormatado();
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_mFuncMaiorSalActionPerformed

    private void mSalarioMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSalarioMedioActionPerformed
        // TODO add your handling code here:
        String salario = empresa.salarioMedioFormatado();
        String mensagem = "O salário médio da empresa é : "+salario;
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_mSalarioMedioActionPerformed

    private void mQtdSalAbaixoMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mQtdSalAbaixoMedActionPerformed
        // TODO add your handling code here:
        int qtd = empresa.qtdFuncSalAbaixoMed();
        String mensagem = "A quantidade de funcionário com salários abaixo da media é: "+qtd;
        JOptionPane.showMessageDialog(null, mensagem);
    }//GEN-LAST:event_mQtdSalAbaixoMedActionPerformed

    private void mListarFuncionarioAbaixoMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mListarFuncionarioAbaixoMedActionPerformed
        // TODO add your handling code here:
        lblLista.setText("LISTA DE FUNCIONÁRIOS ABAIXO DA MÉDIA");
        List<Cfuncionario> lista = empresa.listaFuncSalAbaixoMed();
        carregarTabela(lista);
    }//GEN-LAST:event_mListarFuncionarioAbaixoMedActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // TODO add your handling code here:
        Cfuncionario funcionario;
        if(validarCampos()){
            String nome = txtNome.getText();
            String sexo = cbxSexo.getSelectedItem().toString();
            try {
                int id = Integer.parseInt(txtId.getText());
                double salario = Double.parseDouble(txtSalario.getText());
                funcionario = new Cfuncionario(id, nome, sexo, salario);
                empresa.inserirFuncionario(funcionario);
                JOptionPane.showMessageDialog(null, "Funcionário Adicionado com sucesso!");  
                limparCampos();
                carregarTabela(empresa.funcionariosOrdem());
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ID ou Salário Invalido!!!","Erro", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Preencha todos os campos","Informacão", JOptionPane.INFORMATION_MESSAGE);        
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(txtId.getText());
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja Realmente eliminar esse registro",
                    "Eliminar Registro", JOptionPane.YES_NO_OPTION);
            if (opcao==0){
                boolean eliminado = empresa.remover(id);
                
                if(eliminado){
                    JOptionPane.showMessageDialog(null, "Registo Eliminado com sucesso");
                    List<Cfuncionario> lista = empresa.funcionariosOrdem();
                    carregarTabela(lista);
                    limparCampos();
                    cbxAtualizar.setSelected(false);
                }
                else
                    JOptionPane.showMessageDialog(null, "Registo não encontrado \nPor favor digite o id de um registo valido");
                    
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ID Invalido!!!","Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(txtId.getText());
            String nome = txtNome.getText();
            String sexo = cbxSexo.getSelectedItem().toString();
            double salario = Double.parseDouble(txtSalario.getText());
            Cfuncionario funcionario = new Cfuncionario(id, nome, sexo, salario);
            
            int opcao = JOptionPane.showConfirmDialog(null, "Deseja Realmente atualizar esse registro",
                    "Atualização de Registro", JOptionPane.YES_NO_OPTION);
            if (opcao==0){
                boolean eliminado = empresa.remover(id);
                if(eliminado){
                    JOptionPane.showMessageDialog(null, "Registo Atualizando");
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Registo não encontrado \nRegisto vai ser adicionado");
                }
                empresa.inserirFuncionario(funcionario);
                List<Cfuncionario> lista = empresa.funcionariosOrdem();
                carregarTabela(lista);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ID ou Salário Invalido!!!","Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(txtId.getText());
            if (empresa.pesquisar(empresa.getRaiz(), id) != null){
                Cfuncionario func = empresa.pesquisar(empresa.getRaiz(), id);
                String mensagem = "Funcionário com ID "+id+"\nNome: "+func.getNome()+"\nSalário: "+func.getSalario();
                JOptionPane.showMessageDialog(null, mensagem);
            }else{
                JOptionPane.showMessageDialog(null, "Registo não encontrado\nPor favor digite o Id de um funcionário");
            }
                
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ID Invalido!!!","Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void cbxPesquiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPesquiarActionPerformed
        // TODO add your handling code here:
        if(cbxPesquiar.isSelected()){
            habilitarCampos(false);
            txtId.setEditable(true);
        }else{
            habilitarCampos(true);
        }
    }//GEN-LAST:event_cbxPesquiarActionPerformed

    private void cbxAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAtualizarActionPerformed
        // TODO add your handling code here:
       modelo = (DefaultTableModel)tabelaFuncionarios.getModel();
        int indice = tabelaFuncionarios.getSelectedRow();
        if(cbxAtualizar.isSelected()){
            if(indice != -1){
                int id = Integer.parseInt(modelo.getValueAt(indice, 0).toString());
                Cfuncionario func = empresa.pesquisar(empresa.getRaiz(), id);
                txtId.setText(Integer.toString(func.getId()));
                txtNome.setText(func.getNome());
                txtSalario.setText(Double.toString(func.getSalario()));
                cbxSexo.setSelectedItem(func.getSexo());
            }
            
            
        }else{
            limparCampos();
        }
    }//GEN-LAST:event_cbxAtualizarActionPerformed

    private void mSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSairActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_mSairActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        int opcao = JOptionPane.showConfirmDialog(null, "Deseja realmente sair", "Sair", JOptionPane.YES_NO_OPTION);
        if(opcao==0){
            System.exit(0);
        }else{
            return;
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void tabelaFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaFuncionariosMouseClicked
        // TODO add your handling code here:
        modelo = (DefaultTableModel)tabelaFuncionarios.getModel();
        int indice = tabelaFuncionarios.getSelectedRow();
        if(cbxAtualizar.isSelected()){
            if(indice != -1){
                int id = Integer.parseInt(modelo.getValueAt(indice, 0).toString());
                Cfuncionario func = empresa.pesquisar(empresa.getRaiz(), id);
                txtId.setText(Integer.toString(func.getId()));
                txtNome.setText(func.getNome());
                txtSalario.setText(Double.toString(func.getSalario()));
                cbxSexo.setSelectedItem(func.getSexo());
            }
            
            
        }else{
            limparCampos();
        }
    }//GEN-LAST:event_tabelaFuncionariosMouseClicked

    private void criarArvoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarArvoreActionPerformed
        // TODO add your handling code here:
        criarArvore();
        carregarTabela(empresa.funcionariosOrdem());
    }//GEN-LAST:event_criarArvoreActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JCheckBox cbxAtualizar;
    private javax.swing.JCheckBox cbxPesquiar;
    private javax.swing.JComboBox<String> cbxSexo;
    private javax.swing.JMenuItem criarArvore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblLista;
    private javax.swing.JMenuItem mFuncMaiorSal;
    private javax.swing.JMenuItem mListarFemenino;
    private javax.swing.JMenuItem mListarFuncionarioAbaixoMed;
    private javax.swing.JMenuItem mListarMasculino;
    private javax.swing.JMenuItem mOrdem;
    private javax.swing.JMenuItem mPosOrdem;
    private javax.swing.JMenuItem mPreOrdem;
    private javax.swing.JMenuItem mQtPares;
    private javax.swing.JMenuItem mQtdImpares;
    private javax.swing.JMenuItem mQtdSalAbaixoMed;
    private javax.swing.JMenu mSair;
    private javax.swing.JMenuItem mSalarioMedio;
    private javax.swing.JMenuItem mSalarioTotal;
    private javax.swing.JMenuItem qtFemenino;
    private javax.swing.JMenuItem qtMasculino;
    private MinhaTabela tabelaFuncionarios;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtSalario;
    // End of variables declaration//GEN-END:variables
}
